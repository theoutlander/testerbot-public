# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: b3b0314251d9874f109c4f4e1c85f0f9d709cee8b2aa090fb425bbcee5130395

    docker:
      # specify the version you desire here
      #- image: circleci/node:8.9.1
      - image: circleci/node:8.9.1-stretch-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
        environment:
          JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1.1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1.1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # run tests!
      - run:
          name: Jest Suite
          command: |
            ./cc-test-reporter before-build
            npm run test-cover
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
          environment:
            #JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
            JEST_JUNIT_OUTPUT: "build/logs/js-test-results.xml"

      - store_artifacts:
          path: ./coverage
          prefix: build/logs

      - store_test_results:
          path: reports/junit

      - store_artifacts:
          path: reports/junit